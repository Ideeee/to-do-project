<!DOCTYPE html>
<html>
<head>
  <title>JSON Response Example</title>
  <style>
    body {
      background-color: whitesmoke;

    }

    button {
      border: 1px solid rgb(26, 26, 26);
      border-radius: 10px;
      background-color: rgb(240, 71, 167);
      cursor: pointer;
      padding: 10px;
      color: white;
      font-weight: 600;
      margin-bottom: 20px;
    }

    button:hover {
      background-color: rgb(209, 17, 126);
    }

    button.table-button{
      margin-bottom: 0px !important;
    }

    .parent {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .body-div {
        background-color: rgb(234, 215, 249);
        width: 85%;
        height: 90%;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 5px 10px rgba(48, 47, 47, 0.2);
    }

    td {
      text-align:center;
    } 

    table {
      border-spacing: 0px;
      border: 2px solid;
      border-radius: 10px;
      width : 100%;
      margin-top: 30px;
      overflow:hidden;
      
    }

    table tr:nth-child(even) {
        background-color: plum;
    }

    table tr:nth-child(odd) {
        background-color: rgb(240, 71, 167);
    }

    table th:not(:last-child),
    table td:not(:last-child) {
      border-right: 1px solid black;
    }

    table>thead>tr:not(:last-child)>th,
    table>thead>tr:not(:last-child)>td,
    table>tbody>tr:not(:last-child)>th,
    table>tbody>tr:not(:last-child)>td,
    table>tfoot>tr:not(:last-child)>th,
    table>tfoot>tr:not(:last-child)>td,
    table>tr:not(:last-child)>td,
    table>tr:not(:last-child)>th,
    table>thead:not(:last-child),
    table>tbody:not(:last-child),
    table>tfoot:not(:last-child) 
    {
      border-bottom: 1px solid black;
    }

    table th {
        color: white;
        background-color: rgb(46, 45, 45);
    }

    table tr {
      height: 60px;
    }


  </style>
</head>
<body>
  <div class="parent">
    <div class="body-div">
      <div class="inner" style=" position: relative; padding: 10px;">

        <div style="padding-left: 10px;">
          <h2>All Tasks</h2>
        </div>

        <div style="position: absolute; right: 10px; top:25px;">
          <a href="/create">
            <button>
              Add Task
            </button>
          </a>
        </div>

      
      
      <table >
        <tr>
          <th>S/N</th>
          <th colspan="2">Name</th> 
          <th colspan="4">Description</th>
          <th>Due Date</th>
          <th>Completed</th>
        </tr>

        <% jsonData.Tasks.forEach(function(task, index) { %>
              <tr>
                <td>
                  <%= index + 1 %>
                </td>

                <td colspan="2">
                  <%= task.name %>
                </td>

                <td colspan="4">
                  <%= task.description %>
                </td>

                <td>
                  <%= task.dueDate %>
                </td>
                
                <td>
                  <% if (task.completed) { %>
                    <span>Done!</span>
                  <% }
                  
                  else { %>
                    <button id="change-status" class="table-button" value="<%=task.id %>">
                      Mark as done
                    </button>
                  <% } %>
                  
                </td>
              </tr>
              
        <% }); %>
      </table>

    </div>
  
    </div>

  </div>
 
  

  <script>
    document.getElementById("change-status").addEventListener("click", function () {

    //   const currentStatus = this.value;

    //   // Toggle the status (assuming 'true' and 'false' as possible values)
    //   const newStatus = currentStatus === 'true' ? false : true;
      console.log(this.value)
    // // Data to be sent in the request
      const data = { completed: true };

      const taskId = this.value;

      // Sending a PUT request to update the value
      fetch(`/tasks/${taskId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => {
            if (response.ok) {
                return response.json().then(data => {
                    alert('Task updated successfully!');
                });
        } else {
            return response.json().then(data => {
                alert(`Failed to update task: ${data.message}`);
            });
        }
        })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while updating the status.');
      });
    })
    
  </script>

</body>
</html>